---
name: FH101RF
author: "Jonah Imfeld, Silvano Cortesi"
notice: |
  Licensed under LGPL-3.0
defaults:
  layout_bitwidth: 8

layouts:
  BANDS:
   bitwidth: 3
   layout:
      BAND_433:
        bits: [0]
        doc: True means on for 433MHz band.
        accepts: !Bool
      BAND_868:
        bits: [1]
        doc: True means on for 868/915MHz band.
        accepts: !Bool
      BAND_2G4:
        bits: [2]
        doc: True means on for 2.4GHz band.
        accepts: !Bool
  BRANCHES:
    bitwidth: 3
    layout:
      WEAK:
        bits: [0]
        doc: True means weak branch on.
        accepts: !Bool
      MEDIUM:
        bits: [1]
        doc: True means medium branch on (+8dB of weak).
        accepts: !Bool
      STRONG:
        bits: [2]
        doc: True means strong branch on (+16dB of weak).
        accepts: !Bool

  IRQ_SOURCE:
    bitwidth: 8
    layout:
      ID_MATCH:
        bits: [0]
        doc: The 16-bit ID in FDD mode matches (register ID_HI, ID_LO).
        accepts: !Bool
      FIFO_OVERFLOW:
        bits: [1]
        doc: FIFO overflow.
        accepts: !Bool
      FIFO_FULL:
        bits: [2]
        doc: FIFO buffer full.
        accepts: !Bool
      CORREL_MATCH:
        bits: [3]
        doc: OOK data matches the correlation sequence.
        accepts: !Bool
      ID_MATCH_AND_FIFO_FULL:
        bits: [4]
        doc: 16-bit ID in FDD mode matches and FIFO buffer full.
        accepts: !Bool
      ID_MATCH_AND_LDR:
        bits: [5]
        doc: 16-bit ID in FDD mode matches and LDR was entered.
        accepts: !Bool
      RTC_TIMER_ALARM:
        bits: [6]
        doc: RTC timer alarm.
        accepts: !Bool
      CYCLIC_TIMER_ALARM:
        bits: [7]
        doc: Cyclic timer alarm.
        accepts: !Bool

  RTC:
    bitwidth: 4
    layout:
      RTCSH0:
        bits: [0]
        doc: Selects the short RTC counter #0 (RTCSH0).
        accepts: !Bool
      RTCSH1:
        bits: [1]
        doc: Selects the short RTC counter #1 (RTCSH1).
        accepts: !Bool
      RTCLG0:
        bits: [2]
        doc: Selects the long RTC counter #0 (RTCLG0).
        accepts: !Bool
      RTCLG1:
        bits: [3]
        doc: Selects the long RTC counter #1 (RTCLG1).
        accepts: !Bool

enums:
  SAMPLE_RATE:
    enum:
      SR_32_768:
        val: 0x0
        doc: 32768 Hz. 0.977ms code-sequence-duration.
      SR_16_384:
        val: 0x1
        doc: 16384 Hz. 1.957ms code-sequence-duration.
      SR_8_192:
        val: 0x2
        doc: 32768 Hz. 0.977ms code-sequence-duration.
      SR_4_096:
        val: 0x3
        doc: 4096 Hz. 7.813ms code-sequence-duration.
      SR_2_048:
        val: 0x4
        doc: 2048 Hz. 15.625ms code-sequence-duration.
      SR_1_024:
        val: 0x5
        doc: 1024 Hz. 31.25ms code-sequence-duration.
      SR_0_512:
        val: 0x6
        doc: 512 Hz. 62.5ms code-sequence-duration.
      SR_0_256:
        val: 0x7
        doc: 256 Hz. 125ms code-sequence-duration.

  FDD_MODE:
    enum:
      SLOW:
        val: 0x0
        doc: Slow mode.
      FAST:
        val: 0x1
        doc: Fast mode.

  EXIT_COND:
    enum:
      NO_REASON:
        val: 0x0
        doc: RX resetted or FDD is disabled - Initial state.
      TIMEOUT:
        val: 0x1
        doc: Timeout - No fast code A or B received.
      ID_FAIL:
        val: 0x2
        doc: ID match failed - 16-bit ID did not match.
      FORCE_QUIT:
        val: 0x3
        doc: FO_QUIT was set - user forced slow mode.
  
  FIFO_LEN:
    enum:
      BIT16:
        val: 0x0
        doc: 16-bit FIFO.
      BIT24:
        val: 0x1
        doc: 24-bit FIFO.
      BIT32:
        val: 0x2
        doc: 32-bit FIFO.
      BIT40:
        val: 0x3
        doc: 40-bit FIFO.

  BIN_CODE:
    enum:
      A:
        val: 0
        doc: mls A
      B:
        val: 1
        doc: mls B
      C:
        val: 2
        doc: mls C
      D:
        val: 3
        doc: mls D
      A_inv:
        val: 4
        doc: mls A inv
      B_inv:
        val: 5
        doc: mls B inv
      A_seq:
        val: 6
        doc: m-sequence A
      B_seq:
        val: 7
        doc: m-sequence B
      ZERO_31:
        val: 8
        doc: 31 zeros
      ONE_8:
        val: 9
        doc: 8 ones
      ONE_16:
        val: 10
        doc: 16 ones
      ONE_24:
        val: 11
        doc: 24 ones
      ONE_31:
        val: 12
        doc: 31 ones
      ZOZO:
        val: 13
        doc: 0101 pattern
      OOZZ:
        val: 14
        doc: 1100 pattern
      OOOZZZ:
        val: 15
        doc: 111000 pattern

registers:
  NFA433_SLOW: !Register
    adr: 0x00
    reset_val: 0x05
    doc: Set the sample-rate for preamble-listening (LDR-mode with FDD/IDM enabled) or single-sequence wake-up (FDD disabled) in the 433-MHz band.
    layout: !Layout
      DATA:
        bits: [0-2]
        access: [W]
        accepts: !SharedEnum SAMPLE_RATE

  NFA433_FAST: !Register
    adr: 0x01
    reset_val: 0x00
    doc: Set the sample-rate for FDD-mode data reception in the 433-MHz band.
    layout: !Layout
      DATA:
        bits: [0-2]
        access: [W]
        accepts: !SharedEnum SAMPLE_RATE

  NFA868_SLOW: !Register
    adr: 0x02
    reset_val: 0x05
    doc: Set the sample-rate for preamble-listening (LDR-mode with FDD/IDM enabled) or single-sequence wake-up (FDD disabled) in the 868-MHz band.
    layout: !Layout
      DATA:
        bits: [0-2]
        access: [W]
        accepts: !SharedEnum SAMPLE_RATE

  NFA868_FAST: !Register
    adr: 0x03
    reset_val: 0x00
    doc: Set the sample-rate for FDD-mode data reception in the 868-MHz band.
    layout: !Layout
      DATA:
        bits: [0-2]
        access: [W]
        accepts: !SharedEnum SAMPLE_RATE

  NFA2G4_SLOW: !Register
    adr: 0x04
    reset_val: 0x05
    doc: Set the sample-rate for preamble-listening (LDR-mode with FDD/IDM enabled) or single-sequence wake-up (FDD disabled) in the 2.4-GHz band.
    layout: !Layout
      DATA:
        bits: [0-2]
        access: [W]
        accepts: !SharedEnum SAMPLE_RATE

  NFA2G4_FAST: !Register
    adr: 0x05
    reset_val: 0x00
    doc: Set the sample-rate for FDD-mode data reception in the 2.4-GHz band.
    layout: !Layout
      DATA:
        bits: [0-2]
        access: [W]
        accepts: !SharedEnum SAMPLE_RATE

  CALIB_STATUS: !Register
    adr: 0x06
    reset_val: 0x00
    doc: Indicates status of all calibration processes.
    layout: !Layout
      OFFSET_CAL_IN_PROG:
        bits: [3]
        access: [R]
        doc: Indicates Offset calubration in progress.
        accepts: !Bool
      SPG_CAL_IN_PROG:
        bits: [2]
        access: [R]
        doc: Indicates SPG calibration in progress.
        accepts: !Bool
      LCO_CAL_IN_PROG:
        bits: [1]
        access: [R]
        doc: Indicates LCO calibration in progress.
        accepts: !Bool
      CAL_IN_PROG:
        bits: [0]
        access: [R]
        doc: Indicates general calibration process in progress.
        accepts: !Bool

  CALIB_CTRL: !Register
    adr: 0x07
    reset_val: 0x0E
    doc: Control register for starting calibration processes.
    layout: !Layout
      OFFSET_CAL:
        bits: [3]
        access: [R,W]
        doc: Control bit for initiating offset calibration.
        accepts: !Bool
      SPG_CAL:
        bits: [2]
        access: [R,W]
        doc: Control bit for initiating SPG calibration.
        accepts: !Bool
      LCO_CAL:
        bits: [1]
        access: [R,W]
        doc: Control bit for initiating LCO calibration.
        accepts: !Bool
      CAL_START:
        bits: [0]
        access: [R,W]
        doc: Starts the calibration process.
        accepts: !Bool

  N_SPG_TARGET: !Register
    adr: 0x09
    reset_val: 0x31
    doc: Target register for the Signal Processing Gain setting. Set to 0x46 during SPG calibration.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt


  N_LCO_TARGET_433_HI: !Register
    adr: 0x0B
    reset_val: 0x0E
    doc: Sets the high byte (15:8) target freqency for the 433-MHz band. N_LCO_TARGET_<band> × 4 × 32,768 Hz; Values between 3304 and 3891. (According to register table in DS v1.3b, only 12:8).
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  N_LCO_TARGET_433_LO: !Register
    adr: 0x0C
    reset_val: 0x20
    doc: Sets the low byte (7:0) target freqency for the 433-MHz band. N_LCO_TARGET_<band> × 4 × 32,768 Hz; Values between 3304 and 3891.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  N_LCO_TARGET_868_HI: !Register
    adr: 0x0D
    reset_val: 0x0D
    doc: Sets the high byte (15:8) target freqency for the 868/915-MHz band. N_LCO_TARGET_<band> × 8 × 32,768 Hz; Values between 3281 and 3738. (According to register table in DS v1.3b, only 12:8).
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  N_LCO_TARGET_868_LO: !Register
    adr: 0x0E
    reset_val: 0x87
    doc: Sets the low byte (7:0) target freqency for the 868/915-MHz band. N_LCO_TARGET_<band> × 8 × 32,768 Hz; Values between 3281 and 3738.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  N_LCO_TARGET_2G4_HI: !Register
    adr: 0x0F
    reset_val: 0x12
    doc: Sets the high byte (15:8) target freqency for the 2.4-GHz band. N_LCO_TARGET_<band> × 16 × 32,768 Hz; Values between 4482 and 4833. (According to register table in DS v1.3b, only 12:8).
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  N_LCO_TARGET_2G4_LO: !Register
    adr: 0x10
    reset_val: 0xCE
    doc: Sets the low byte (7:0) target freqency for the 2.4-GHz band. N_LCO_TARGET_<band> × 16 × 32,768 Hz; Values between 4482 and 4833.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  LCO_FREQ_433_HI: !Register
    adr: 0x14
    reset_val: 0x00
    doc: Holds the current frequency of the 433-MHz band, high byte (15:8). Read the registers in the given order from 0x14 to 0x19. (According to register table in DS v1.3b, only 12:8).
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  LCO_FREQ_433_LO: !Register
    adr: 0x15
    reset_val: 0x00
    doc: Holds the current frequency of the 433-MHz band, low byte (7:0). Read the registers in the given order from 0x14 to 0x19.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  LCO_FREQ_868_HI: !Register
    adr: 0x16
    reset_val: 0x00
    doc: Holds the current frequency of the 868/915-MHz band, high byte (15:8). Read the registers in the given order from 0x14 to 0x19. (According to register table in DS v1.3b, only 12:8).
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  LCO_FREQ_868_LO: !Register
    adr: 0x17
    reset_val: 0x00
    doc: Holds the current frequency of the 868/915-MHz band, low byte (7:0). Read the registers in the given order from 0x14 to 0x19.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  LCO_FREQ_2G4_HI: !Register
    adr: 0x18
    reset_val: 0x00
    doc: Holds the current frequency of the 2.4-GHz band, high byte (15:8). Read the registers in the given order from 0x14 to 0x19. (According to register table in DS v1.3b, only 12:8).
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  LCO_FREQ_2G4_LO: !Register
    adr: 0x19
    reset_val: 0x00
    doc: Holds the current frequency of the 2.4-GHz band, low byte (7:0). Read the registers in the given order from 0x14 to 0x19.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  D_CORNER_CTRL: !Register
    adr: 0x23
    reset_val: 0x00
    doc: Set to 0x02 at power-up.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  BAND_BRANCH_CTRL: !Register
    adr: 0x24
    reset_val: 0x77
    doc: Selects the active bands and branches (RF-sensitivity).
    layout: !Layout
      ACTIVE_BRANCHES:
        bits: [2-0]
        access: [W]
        doc: Selects the active detection branches.
        accepts: !SharedLayout BRANCHES
      ACTIVE_BANDS:
        bits: [4-6]
        access: [W]
        doc: Selects the active bands.
        accepts: !SharedLayout BANDS

  CODE_SELECT: !Register
    adr: 0x28
    reset_val: 0x10
    doc: Selects the correlation patterns for code A and B.
    layout: !Layout
      A:
        bits: [0-3]
        access: [W]
        doc: Selects the correlation pattern for code A.
        accepts: !SharedEnum BIN_CODE
      B:
        bits: [4-7]
        access: [W]
        doc: Selects the correlation pattern for code B.
        accepts: !SharedEnum BIN_CODE

  KORREL_THRESH_A: !Register
    adr: 0x29
    reset_val: 0x1A
    doc: Sets the threshold for a code A match. Useful values are between 0x19 and 0x1E. Lower values correspond to more tolerated bit errors (can lead to false wake-up detections).
    layout: !Layout
      DATA:
        bits: [0-4]
        access: [R,W]
        accepts: !UInt

  KORREL_THRESH_B: !Register
    adr: 0x2A
    reset_val: 0x1A
    doc: Sets the threshold for a code B match. Useful values are between 0x19 and 0x1E. Lower values correspond to more tolerated bit errors (can lead to false wake-up detections).
    layout: !Layout
      DATA:
        bits: [0-4]
        access: [R,W]
        accepts: !UInt

  KORREL_STATE: !Register
    adr: 0x2B
    reset_val: 0xC0
    doc:
    layout: !Layout
      KORREL_BRANCHES_A:
        bits: [0-2]
        doc: Indicates receiver branch that had contributed for Code A recognition
        access: [R]
        accepts: !SharedLayout BRANCHES
      KORREL_BRANCHES_B:
        bits: [3-5]
        doc: Indicates receiver branch that had contributed for Code B recognition
        access: [R]
        accepts: !SharedLayout BRANCHES
      KORREL_BRANCHES_LATEST:
        bits: [6-7]
        doc: Indicates frequency band for latest correlator
        access: [R]
        accepts: !Enum
          BAND_433:
            doc: Band 433MHz matched.
            val: 0x00
          BAND_868:
            doc: Band 868/915MHz matched.
            val: 0x01
          BAND_2G4:
            doc: Band 2.4GHz matched.
            val: 0x02

  KORREL_VAL: !Register
    adr: 0x2C
    reset_val: 0x00
    doc: Indicates the match level for code A and B. A value of 15 indicates no bit errors, a value of 0 indicates 15 bit errors.
    layout: !Layout
      A:
        bits: [0-3]
        doc: Indicates the match level for code A. Refreshed after a positive Code A match. Typically >5
        access: [R]
        accepts: !UInt
      B:
        bits: [4-7]
        doc: Indicates the match level for code B. Refreshed after a positive Code B match. Typically >5
        access: [R]
        accepts: !UInt

  FDD_ENABLE: !Register
    adr: 0x2D
    reset_val: 0x07
    doc: Enable the fast data decoder for a given band.
    layout: !Layout
      FDD_BANDS:
        bits: [0-2]
        access: [W]
        accepts: !SharedLayout BANDS

  FDD_ACTIVE: !Register
    adr: 0x2E
    reset_val: 0x00
    doc: Reads the FDD mode for each band.
    layout: !Layout
      BAND_2G4:
        bits: [0]
        access: [R]
        accepts: !SharedEnum FDD_MODE
      BAND_868:
        bits: [1]
        access: [R]
        accepts: !SharedEnum FDD_MODE
      BAND_433:
        bits: [2]
        access: [R]
        accepts: !SharedEnum FDD_MODE

  FO_QUIT: !Register
    adr: 0x2F
    reset_val: 0x00
    doc: Forces the specified band to quit fast mode immediately.
    layout: !Layout
      QUIT_BANDS:
        bits: [0-2]
        access: [W]
        accepts: !SharedLayout BANDS

  FDD_EXIT_COND: !Register
    adr: 0x30
    reset_val: 0x00
    doc: Holds the FDD exit condition for all the bands.
    layout: !Layout
      BAND_433:
        bits: [0-1]
        access: [R]
        accepts: !SharedEnum EXIT_COND
      BAND_868:
        bits: [2-3]
        access: [R]
        accepts: !SharedEnum EXIT_COND
      BAND_2G4:
        bits: [4-5]
        access: [R]
        accepts: !SharedEnum EXIT_COND

  IRQ_SELECT: !Register
    adr: 0x31
    reset_val: 0x01
    doc: Selects the interrupt sources.
    layout: !Layout
      IRQ_SELECT:
        bits: [0-7]
        access: [W]
        accepts: !SharedLayout IRQ_SOURCE

  IRQ_STATUS: !Register
    adr: 0x32
    reset_val: 0x00
    doc: Holds the status of the IRQ events.
    layout: !Layout
      IRQ_STATUS:
        bits: [0-7]
        access: [R]
        accepts: !SharedLayout IRQ_SOURCE

  IRQ_CLR: !Register
    adr: 0x33
    reset_val: 0x00
    doc: Resets the corresponding IRQ event bit.
    layout: !Layout
      IRQ_CLR:
        bits: [0-7]
        access: [W]
        accepts: !SharedLayout IRQ_SOURCE

  IRQ_SET: !Register
    adr: 0x34
    reset_val: 0x00
    doc: Sets the corresponding IRQ event bit (triggers IRQ events for debugging).
    layout: !Layout
      IRQ_SET:
        bits: [0-7]
        access: [W]
        accepts: !SharedLayout IRQ_SOURCE

  ID_HI: !Register
    adr: 0x35
    reset_val: 0x7D
    doc: Sets the high byte of the match ID. 4-MSB form the group ID.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  ID_LO: !Register
    adr: 0x36
    reset_val: 0xA8
    doc: Sets the low byte of the match ID.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  IDM_ENABLE: !Register
    adr: 0x37
    reset_val: 0x07
    doc: Enables the ID match for a given band.
    layout: !Layout
      MATCH_BANDS:
        bits: [0-2]
        access: [W]
        accepts: !SharedLayout BANDS

  IDM_CTRL: !Register
    adr: 0x38
    reset_val: 0x00
    doc: Slect the type of ID's accepted by the receiver.
    layout: !Layout
      CTRL:
        bits: [0-1]
        access: [W]
        accepts: !Enum
          IND_ONLY:
            doc: only individual 16 bit ID.
            val: 0x0
          IND_GROUP:
            doc: individual 16 bit ID or groupwise ID.
            val: 0x1
          BROAD_ONLY:
            doc: only broadcast ID.
            val: 0x2
          IND_GROUP_BROAD:
            doc: individual 16 bit ID, groupwise ID, or broadcast ID.
            val: 0x3

  IDM_CLR: !Register
    adr: 0x39
    reset_val: 0x00
    doc: Clear the FDD_EXIT_COND register.
    layout: !Layout
      BRANCH:
        bits: [0]
        access: [W]
        accepts: !Bool

  IDM_BAND: !Register
    adr: 0x3A
    reset_val: 0x03
    doc: Indicates the frequency band of the ID match event.
    layout: !Layout
      DATA:
        bits: [0-1]
        access: [R]
        accepts: !Enum
          BAND_433:
            val: 0x0
          BAND_868:
            val: 0x1
          BAND_2G4:
            val: 0x2

  IDM_REASON: !Register
    adr: 0x3B
    reset_val: 0x00
    doc: Indicates the type of ID match event.
    layout: !Layout
      REASON:
        bits: [0-1]
        access: [R]
        accepts: !Enum
          UNKNOWN:
            doc: Unspecified reason
            val: 0x0
          IND_MATCH:
            doc: Individual ID
            val: 0x1
          GROUP_MATCH:
            doc: Group ID
            val: 0x2
          BROAD_MATCH:
            doc: Broadcast ID
            val: 0x3

  RTC_SELECT: !Register
    adr: 0x3C
    reset_val: 0x00
    doc: Allows for selection of the desired timer modes.
    layout: !Layout
      RTC_SELECT:
        bits: [0-3]
        access: [W]
        accepts: !SharedLayout RTC
      CYCLTOP:
        bits: [4]
        access: [W]
        doc: Selects the cyclic counter (CYCLTOP).
        accepts: !Bool

  RTC_STATUS: !Register
    adr: 0x3D
    reset_val: 0x00
    doc: Indicates occurence of RTC events.
    layout: !Layout
      RTC_SELECT:
        bits: [0-3]
        access: [R]
        accepts: !SharedLayout RTC

  RTC_CLR: !Register
    adr: 0x3E
    reset_val: 0x00
    doc: Clears the respective event entries in RTC_STATUS.
    layout: !Layout
      RTC_CLR:
        bits: [0-3]
        access: [W]
        accepts: !SharedLayout RTC

  RTCSH0_THRESH_HI: !Register
    adr: 0x3F
    reset_val: 0x00
    doc: Upper (Bits 15:8) byte of the RTCSH0 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCSH0_THRESH_LO: !Register
    adr: 0x40
    reset_val: 0x00
    doc: Lower (Bits 7:0) byte of the RTCSH0 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCSH1_THRESH_HI: !Register
    adr: 0x41
    reset_val: 0x00
    doc: Upper (Bits 15:8) byte of the RTCSH1 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCSH1_THRESH_LO: !Register
    adr: 0x42
    reset_val: 0x00
    doc: Lower (Bits 7:0) byte of the RTCSH1 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCLG0_THRESH_4: !Register
    adr: 0x43
    reset_val: 0x00
    doc: Bits 39:32 of the RTCLG0 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCLG0_THRESH_3: !Register
    adr: 0x44
    reset_val: 0x00
    doc: Bits 31:24 of the RTCLG0 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCLG0_THRESH_2: !Register
    adr: 0x45
    reset_val: 0x00
    doc: Bits 23:16 of the RTCLG0 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCLG0_THRESH_1: !Register
    adr: 0x46
    reset_val: 0x00
    doc: Bits 15:8 of the RTCLG0 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCLG0_THRESH_0: !Register
    adr: 0x47
    reset_val: 0x00
    doc: Bits 7:0 of the RTCLG0 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCLG1_THRESH_4: !Register
    adr: 0x48
    reset_val: 0x00
    doc: Bits 39:32 of the RTCLG1 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCLG1_THRESH_3: !Register
    adr: 0x49
    reset_val: 0x00
    doc: Bits 31:24 of the RTCLG1 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCLG1_THRESH_2: !Register
    adr: 0x4A
    reset_val: 0x00
    doc: Bits 23:16 of the RTCLG1 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCLG1_THRESH_1: !Register
    adr: 0x4B
    reset_val: 0x00
    doc: Bits 15:8 of the RTCLG1 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  RTCLG1_THRESH_0: !Register
    adr: 0x4C
    reset_val: 0x00
    doc: Bits 7:0 of the RTCLG1 threshold.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  CYCLPRESC: !Register
    adr: 0x4D
    reset_val: 0x00
    doc: Cycle prescaler for cyclic counter, system clock divided by prescaler (therefore max 8:29.9922 minutes).
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  CYCLTOP_HI: !Register
    adr: 0x4E
    reset_val: 0x00
    doc: Bits 15:8 defining the maximal cyclic counter value CYCLTOP before being reset to zero.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  CYCLTOP_LO: !Register
    adr: 0x4F
    reset_val: 0x00
    doc: Bits 7:0 defining the maximal cyclic counter value CYCLTOP before being reset to zero.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  CNTR40_4: !Register
    adr: 0x50
    reset_val: 0x00
    doc: Bits 39:32 of the system clock counter CNTR40.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  CNTR40_3: !Register
    adr: 0x51
    reset_val: 0x00
    doc: Bits 31:24 of the system clock counter CNTR40.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  CNTR40_2: !Register
    adr: 0x52
    reset_val: 0x00
    doc: Bits 23:16 of the system clock counter CNTR40.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  CNTR40_1: !Register
    adr: 0x53
    reset_val: 0x00
    doc: Bits 15:8 of the system clock counter CNTR40.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  CNTR40_0: !Register
    adr: 0x54
    reset_val: 0x00
    doc: Bits 7:0 of the system clock counter CNTR40.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  CNTR40_CLR: !Register
    adr: 0x55
    reset_val: 0x00
    doc: Clear the system clock counter CNTR40 by setting this to true. Manually setting the register to false afterwards is mandatory!
    layout: !Layout
      CLR:
        bits: [0]
        access: [W]
        accepts: !Bool

  FIFO_LENGTH: !Register
    adr: 0x56
    reset_val: 0x14
    doc: Selects the FIFO length for each band.
    layout: !Layout
      BAND_433:
        bits: [0-1]
        access: [W]
        accepts: !SharedEnum FIFO_LEN
      BAND_868:
        bits: [2-3]
        access: [W]
        accepts: !SharedEnum FIFO_LEN
      BAND_2G4:
        bits: [4-5]
        access: [W]
        accepts: !SharedEnum FIFO_LEN

  FIFO_COUNT_433: !Register
    adr: 0x57
    reset_val: 0x00
    doc: Number of bits in the FIFO buffer for the 433MHz band. Can be cleared by writing 0.
    layout: !Layout
      DATA:
        bits: [0-5]
        access: [R, W]
        accepts: !UInt

  FIFO_COUNT_868: !Register
    adr: 0x58
    reset_val: 0x00
    doc: Number of bits in the FIFO buffer for the 868/915MHz band. Can be cleared by writing 0.
    layout: !Layout
      DATA:
        bits: [0-5]
        access: [R, W]
        accepts: !UInt

  FIFO_COUNT_2G4: !Register
    adr: 0x59
    reset_val: 0x00
    doc: Number of bits in the FIFO buffer for the 2.4GHz band. Can be cleared by writing 0.
    layout: !Layout
      DATA:
        bits: [0-5]
        access: [R, W]
        accepts: !UInt

  RX_FIFO_5_433: !Register
    adr: 0x5A
    reset_val: 0x00
    doc: The FIFO byte 5 for the 433MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_4_433: !Register
    adr: 0x5B
    reset_val: 0x00
    doc: The FIFO byte 4 for the 433MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_3_433: !Register
    adr: 0x5C
    reset_val: 0x00
    doc: The FIFO byte 3 for the 433MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_2_433: !Register
    adr: 0x5D
    reset_val: 0x00
    doc: The FIFO byte 2 for the 433MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_1_433: !Register
    adr: 0x5E
    reset_val: 0x00
    doc: The FIFO byte 1 for the 433MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_0_433: !Register
    adr: 0x5F
    reset_val: 0x00
    doc: The FIFO byte 0 for the 433MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_5_868: !Register
    adr: 0x60
    reset_val: 0x00
    doc: The FIFO byte 5 for the 868MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_4_868: !Register
    adr: 0x61
    reset_val: 0x00
    doc: The FIFO byte 4 for the 868MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_3_868: !Register
    adr: 0x62
    reset_val: 0x00
    doc: The FIFO byte 3 for the 868MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_2_868: !Register
    adr: 0x63
    reset_val: 0x00
    doc: The FIFO byte 2 for the 868MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_1_868: !Register
    adr: 0x64
    reset_val: 0x00
    doc: The FIFO byte 1 for the 868MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_0_868: !Register
    adr: 0x65
    reset_val: 0x00
    doc: The FIFO byte 0 for the 868MHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_5_2G4: !Register
    adr: 0x66
    reset_val: 0x00
    doc: The FIFO byte 5 for the 2.4GHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_4_2G4: !Register
    adr: 0x67
    reset_val: 0x00
    doc: The FIFO byte 4 for the 2.4GHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_3_2G4: !Register
    adr: 0x68
    reset_val: 0x00
    doc: The FIFO byte 3 for the 2.4GHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_2_2G4: !Register
    adr: 0x69
    reset_val: 0x00
    doc: The FIFO byte 2 for the 2.4GHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_1_2G4: !Register
    adr: 0x6A
    reset_val: 0x00
    doc: The FIFO byte 1 for the 2.4GHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  RX_FIFO_0_2G4: !Register
    adr: 0x6B
    reset_val: 0x00
    doc: The FIFO byte 0 for the 2.4GHz band, _5 is filled first.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R]
        accepts: !UInt

  ACTUAL_NFA_433: !Register
    adr: 0x6C
    reset_val: 0x25
    doc: This register contains the actual NFA (sampling rate) value that is currently valid for 433MHz data reception.
    layout: !Layout
      SLOW:
        bits: [0-2]
        access: [R]
        accepts: !SharedEnum SAMPLE_RATE
      FAST:
        bits: [4-6]
        access: [R]
        accepts: !SharedEnum SAMPLE_RATE

  ACTUAL_NFA_868: !Register
    adr: 0x6D
    reset_val: 0x15
    doc: This register contains the actual NFA (sampling rate) value that is currently valid for 868MHz data reception.
    layout: !Layout
      SLOW:
        bits: [0-2]
        access: [R]
        accepts: !SharedEnum SAMPLE_RATE
      FAST:
        bits: [4-6]
        access: [R]
        accepts: !SharedEnum SAMPLE_RATE

  ACTUAL_NFA_2G4: !Register
    adr: 0x6E
    reset_val: 0x25
    doc: This register contains the actual NFA (sampling rate) value that is currently valid for 2.4GHz data reception.
    layout: !Layout
      SLOW:
        bits: [0-2]
        access: [R]
        accepts: !SharedEnum SAMPLE_RATE
      FAST:
        bits: [4-6]
        access: [R]
        accepts: !SharedEnum SAMPLE_RATE

  ACTUAL_BANDSELECT: !Register
    adr: 0x6F
    reset_val: 0x07
    doc: This 3 bit register contains the actual selected frequency bands that are currently used.
    layout: !Layout
      SELECTED_BANDS:
        bits: [0-2]
        access: [R]
        accepts: !SharedLayout BANDS

  GENPURP_1: !Register
    adr: 0x71
    reset_val: 0x00
    doc: 8 bits free to use for read/write. (Register table says only write).
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [R, W]
        accepts: !UInt

  XTAL_OSC_CTRL: !Register
    adr: 0x73
    reset_val: 0x01
    doc: Enables the built-in crystal oscillator driving a 2-pin crystal device.
    layout: !Layout
      DATA:
        bits: [0]
        access: [W]
        accepts: !Bool

  LDO_XTAL_CTRL: !Register
    adr: 0x74
    reset_val: 0x03
    doc: Controls the LDO and the crystal oscillator.
    layout: !Layout
      INT:
        bits: [0-1]
        access: [W]
        doc: RESERVED. Do not change. Write 0x3
        accepts: !Fixed 0x3
      XTAL_OSC_BYP:
        bits: [3]
        access: [W]
        doc: Used for selecting an external system clock source that is applied to pin CLK32_XI. In this case, XTAL_OSC_BYP should be true. Set this, if a 2-pin crystal will not be used.
        accepts: !Bool
      LDO_ENA_NFA:
        bits: [5]
        access: [W]
        doc: sed to deactivate the internal LDO for VDDC voltage generation. If set to true, an external VDDC source must be supplied.
        accepts: !Bool

  MUX_D_OUT_SEL: !Register
    adr: 0x75
    reset_val: 0x0F
    doc: Selects the signal routed to the GPO1 and GPO2 pins.
    layout: !Layout
      OUT:
        bits: [0-3]
        access: [W]
        accepts: !Enum
          RX_2G4:
            val: 0
            doc: RX data stream at 2.4GHz. CLK on GPO1 and DATA on GPO2.
          RX_868:
            val: 1
            doc: RX data stream at 868MHz. CLK on GPO1 and DATA on GPO2.
          RX_433:
            val: 2
            doc: RX data stream at 433MHz. CLK on GPO1 and DATA on GPO2.
          WUP_A_B_2G4:
            val: 3
            doc: Wake-up A/B signals at 2.4GHz. WUP_A on GPO1 and WUP_B on GPO2.
          IDM_WUP_A_433:
            val: 6
            doc: General ID match on GPO1 and 433MHz Wake-up A signal WUP_A on GPO2.
          WUP_A_B_868:
            val: 7
            doc: Wake-up A/B signals at 868MHz. WUP_A on GPO1 and WUP_B on GPO2.
          WUP_A_433_RX_ACTIVE:
            val: 8
            doc: 433MHz Wake-up A signal WUP_A on GPO1 and RX_ACTIVE trigger signal on GPO2.
          WUP_A_868_RX_ACTIVE:
            val: 9
            doc: 868MHz Wake-up A signal WUP_A on GPO1 and RX_ACTIVE trigger signal on GPO2.
          WUP_A_2G4_RX_ACTIVE:
            val: 10
            doc: 2.4GHz Wake-up A signal WUP_A on GPO1 and RX_ACTIVE trigger signal on GPO2.
          CLK32_IRQ_EVENT:
            val: 14
            doc: System Clock CLK32 on GPO1 and interrupt signal IRQ_EVENT on GPO2.
          IRQ_EVENT_1:
            val: 15
            doc: Interrupt signal IRQ_EVENT on GPO1 and static high on GPO2.
          

  LC_TG_ENA: !Register
    adr: 0x76
    reset_val: 0x01
    doc: Set to 0x00 during power-up.
    layout: !Layout
      DATA:
        bits: [0]
        access: [W]
        accepts: !Bool

  XTAL_GOOD: !Register
    adr: 0x77
    reset_val: 0x00
    doc: Reads as true if the clock source is stable.
    layout: !Layout
      DATA:
        bits: [0]
        access: [R]
        accepts: !Bool

  COMP_THRESH_W: !Register
    adr: 0x78
    reset_val: 0x00
    doc: Set this register to 0xA before executing the comparator calibration.
    layout: !Layout
      DATA:
        bits: [0-7]
        access: [W]
        accepts: !UInt

  KORREL_SV_CLEAR: !Register
    adr: 0x7C
    reset_val: 0x00
    doc: Set true to clear the KORREL_STATE and KORREL_VAL registers.
    layout: !Layout
      DATA:
        bits: [0]
        access: [W]
        accepts: !Bool

  VERSION: !Register
    adr: 0x7F
    reset_val: 0x41
    doc: Holds the version number of the IC, currently 0x41.
    layout: !Layout
      VERSION_NUMBER:
        bits: [0-7]
        access: [R]
        accepts: !Fixed 0x41
